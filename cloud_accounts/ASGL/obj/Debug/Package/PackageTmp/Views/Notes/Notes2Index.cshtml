@using System.Web.UI.WebControls
@using ASGL.Models
@model ASGL.Models.PageModel

@{
    ViewBag.Title = "Notes2Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    GLDbContext db = new GLDbContext();

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
}

@*<link href="~/Content/bootstrap%20datepicker%20css/datepicker.css" rel="stylesheet" />
    <link href="~/Content/bootstrap%20datepicker%20css/datepicker3.css" rel="stylesheet" />

    <script src="~/Scripts/bootstrap-datepicker.js"></script>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.AGlMaster.COMPID, new { id = "txtCompId", @Value = LoggedCompId })
    @Html.HiddenFor(model => model.AGL_accharmst.HEADCD, new { id = "txtheadcd" })
    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Schedule/Notes To The Accounts(II) </h1>
    </div>
    <br />
    <div class="col-md-12">
        <div class="form-group">
            <div class="row">

                <div class="col-md-3">
                    <span>@Html.Label("name", "Head", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.AGL_accharmst.HEADNM, htmlAttributes: new { id = "txtheadnm", @class = "form-control input-sm", autofocus = true })
                    @Html.ValidationMessageFor(model => model.AGL_accharmst.HEADNM, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    <span>@Html.Label("name", "From", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control input-sm", id = "idFromdate", @Value = currentDateTime.ToString("dd-MMM-yyyy") })

                </div>

                <div class="col-md-3">
                    <span>@Html.Label("name", "To", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control input-sm", id = "idTodate", @Value = currentDateTime.ToString("dd-MMM-yyyy") })

                </div>


                <div class="col-md-1">
                    <span><br /></span>
                    <input id="SubmitId" type="submit" class="btn btn-info" value="Print" name="command" formtarget="_blank" />
                </div>
                <div class="col-md-2"></div>
            </div>
            <div class="row">
                <div class="col-md-3">

                </div>
                @if (TempData["ErrorFromDateMessage"] != null)
                {

                    <div class="col-md-3">
                        <h6 style="color: #C03523">@TempData["ErrorFromDateMessage"]</h6>
                    </div>

                }
                @if (TempData["ErrorToDateMessage"] != null)
                {


                    <div class="col-md-3">
                        <h6 style="color: #C03523">@TempData["ErrorToDateMessage"] </h6>
                    </div>

                }

            </div>

        </div>



    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            //$(function () {
            //    $("#idFromdate").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            //});
            //$(function () {
            //    $("#idTodate").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            //});

            $(function () {
                $("#idFromdate").datepicker({
                    dateFormat: 'dd-M-yy',
                    changeYear: true,
                    onClose: function (dateText, inst) {
                        document.getElementById("idTodate").focus();
                    }
                });
            });

            $(function () {
                $("#idTodate").datepicker({
                    dateFormat: 'dd-M-yy',
                    changeYear: true,
                    onClose: function (dateText, inst) {
                        document.getElementById("SubmitId").focus();
                    }
                });
            });


            $('#txtheadnm').autocomplete(
             {
                 source: '@Url.Action("TagSearch", "Notes")',
                 change: $('#txtheadnm').keyup(_.debounce(txtOneChanged, 1000)),
                 select: function (event, ui) {
                     document.getElementById("idFromdate").focus();
                 }
             });
        });

        function txtOneChanged() {
            var changedText = $("#txtheadnm").val();
            var txtBox = document.getElementById('txtheadnm');
            var txtBox1 = document.getElementById('txtheadcd');
            $.getJSON(
                '/Notes/ItemNameChanged', { "ChangedText": changedText },
                function (result) {
                    txtBox.value = result.headname;
                    txtBox1.value = result.headcd;

                    document.getElementById("txtheadnm").focus();
                });
        }
    </script>


}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>