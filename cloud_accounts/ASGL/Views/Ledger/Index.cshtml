@using System.Web.UI.WebControls
@using ASGL.Models
@model ASGL.Models.PageModel



@{
    ViewBag.Title = "Index";
    
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();


    GLDbContext db = new GLDbContext();


    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.AGlMaster.COMPID, new { id = "txtCompId", @Value = LoggedCompId })
    @*@Html.HiddenFor(model => model.AGlMaster.DEBITCD, new { id = "txtHeadId", @Value = TempData["HeadCD"] })*@

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">General Ledger</h1>
    </div>
    <br />
    <div class="col-md-12">
        <div class="form-group">
            <div class="row">

                <div class="col-md-4">
                    <span>@Html.Label("name","Account Head", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.AGL_acchart.ACCOUNTNM, htmlAttributes: new { id = "txtAccountName", @class = "form-control input-sm",autofocus=true })
                    @*@Html.ValidationMessageFor(model => model.HEADTP, "", new { @class = "text-danger" })*@
                </div>

                <div class="col-md-3">
                    <span>@Html.Label("name","From", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control input-sm", id = "idFromdate", @Value = currentDateTime.ToString("dd-MMM-yyyy") })
                    @*@Html.ValidationMessageFor(model => model.HEADNM, "", new { @class = "text-danger" })*@
                </div>
               
                <div class="col-md-3">
                    <span>@Html.Label("name", "To", htmlAttributes: new { @class = "control-label" })</span>
                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control input-sm", id = "idTodate", @Value = currentDateTime.ToString("dd-MMM-yyyy") })
                    @*@Html.ValidationMessageFor(model => model.HEADNM, "", new { @class = "text-danger" })*@
                </div>


                <div class="col-md-2">
                    <span><br /></span>
                    <input id="SubmitId" type="submit" class="btn btn-info" value="Print" name="command" formtarget="_blank" />
                </div>
              
            </div>
            
            <div class="row">
                <div class="col-md-4">
                </div>
                @if (TempData["ErrorFromDateMessage"] != null)
                {

                    <div class="col-md-3">
                        <h6 style="color: #C03523">@TempData["ErrorFromDateMessage"]</h6>
                    </div>

                }
                @if (TempData["ErrorToDateMessage"] != null)
                {


                    <div class="col-md-3">
                        <h6 style="color: #C03523">@TempData["ErrorToDateMessage"] </h6>
                    </div>

                }

            </div>
        </div>
      

       

    </div>
   

     <script type="text/javascript">
         $(document).ready(function () {
             $(function () {
                 $("#idFromdate").datepicker({ 
                     dateFormat: 'dd-M-yy',
                     changeYear: true, 
                     onClose: function (dateText, inst) {
                         document.getElementById("idTodate").focus();
                     }
                 });
             });
             
             $(function () {
                 $("#idTodate").datepicker({
                     dateFormat: 'dd-M-yy',
                     changeYear: true,
                     onClose: function (dateText, inst) {
                         document.getElementById("SubmitId").focus();
                     }
                 });
             });

            

             $('#txtAccountName').autocomplete(
             {
                source: '@Url.Action("TagSearch", "ClosingBalance")',
                change: $('#txtAccountName').keyup(_.debounce(txtOneChanged, 1000)),
                select: function(event, ui) {
                    document.getElementById("idFromdate").focus();
                }
            });
            
         });
         function txtOneChanged() {
             var changedText = $("#txtAccountName").val();
             var txtBox = document.getElementById('txtAccountName');
             var txtBox1 = document.getElementById('txtAccountcd');
             $.getJSON(
                 '/ClosingBalance/ItemNameChanged', { "ChangedText": changedText },
                 function (result) {
                     txtBox.value = result.Accountname;
                     txtBox1.value = result.debitcd;

                    // document.getElementById("idDebitAmount").focus();
                 });
         }
    </script>
  

}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>